{"version":3,"sources":["../src/jsonuri.js"],"names":[],"mappings":";;;;;;AAAA;;AAEA;;;;;;;AAOA,SAAS,OAAT,CAAiB,IAAjB,EAAuB,IAAvB,EAA6B,KAA7B,EAAoC;AAClC;AACA,MAAI,EAAE,gBAAgB,MAAlB,CAAJ,EAA+B;;AAE/B;AACA,MAAI,CAAC,IAAL,EAAW,OAAO,IAAP;;AAEX;AACA,MAAI,OAAO,0BAAe,OAAO,IAAP,EAAa,KAAb,CAAmB,GAAnB,CAAf,CAAX;AACA;AACA,MAAI,MAAM,IAAV;;AAEA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,MAAzB,EAAiC,GAAjC,EAAsC;AACpC;AACA,QAAI,CAAC,KAAK,CAAL,CAAL,EAAc;;AAEd,QAAI,MAAM,KAAK,MAAL,GAAc,CAAxB,EAA2B;AACzB,UAAI,UAAU,SAAd,EAAyB;AACvB;AACA,YAAI,KAAK,CAAL,CAAJ,IAAe,KAAf;AACD,OAHD,MAGO,IAAI,UAAU,IAAd,EAAoB;AACzB;AACA,YAAI,oBAAS,GAAT,CAAJ,EAAmB;AACjB,cAAI,KAAK,CAAL,CAAJ,IAAe,IAAf;AACA,iBAAO,IAAI,KAAK,CAAL,CAAJ,CAAP;AACD;;AAED;AACA,YAAI,mBAAQ,GAAR,CAAJ,EAAkB;AAChB,cAAI,KAAK,CAAL,CAAJ,IAAe,IAAf;AACA,cAAI,MAAJ,CAAW,KAAK,CAAL,CAAX,EAAoB,CAApB;AACD;AACF;AACF,KAjBD,MAiBO,IAAI,KAAJ,EAAW;AAChB;AACA,UAAI,WAAW,KAAK,IAAI,CAAT,CAAf;;AAEA;AACA,UAAI,CAAC,IAAI,KAAK,CAAL,CAAJ,CAAL,EAAmB;AACjB;AACA,YAAI,WAAY,WAAW,CAAX,KAAiB,CAAlB,GAAuB,OAAvB,GAAiC,QAAhD;AACA,YAAI,aAAa,OAAjB,EAA0B;AACxB,cAAI,KAAK,CAAL,CAAJ,IAAe,EAAf;AACD,SAFD,MAEO,IAAI,aAAa,QAAjB,EAA2B;AAChC,cAAI,KAAK,CAAL,CAAJ,IAAe,EAAf;AACD;AACF;AACF,KAdM,MAcA;AACL,UAAI,IAAI,KAAK,CAAL,CAAJ,MAAiB,SAArB,EAAgC;AAC9B;AACA,eAAO,SAAP;AACD,OAHD,MAGO,IAAI,IAAI,KAAK,CAAL,CAAJ,MAAiB,IAArB,EAA2B;AAChC,eAAO,IAAP;AACD;AACF;;AAED,UAAM,IAAI,KAAK,CAAL,CAAJ,CAAN;AACD;;AAED,SAAO,GAAP;AACD;;kBAEc,O","file":"jsonuri.js","sourcesContent":["import {combingPathKey, isObject, isArray} from './util'\n\n/**\n * Jsonuri\n * @author Linkjun\n * @param {Object | Array}    data  {k:1,s:[..]}\n * @param {String}            path  '/s/0/'\n * @param {Any}               value [0,{s:0},2,3,4]\n */\nfunction Jsonuri(data, path, value) {\n  //Data must be Object.\n  if (!(data instanceof Object)) return\n\n  //Path must be valid.\n  if (!path) return data\n\n  //Combing Path Key.\n  let keys = combingPathKey(String(path).split('/'))\n  //Initialize data to the pointer.\n  let cur = data\n\n  for (let i = 0; i < keys.length; i++) {\n    //Key must be valid.\n    if (!keys[i]) continue\n\n    if (i === keys.length - 1) {\n      if (value !== undefined) {\n        //set value.\n        cur[keys[i]] = value\n      } else if (value === null) {\n        //delete value in the object.\n        if (isObject(cur)) {\n          cur[keys[i]] = null\n          delete cur[keys[i]]\n        }\n\n        //delete value in the array.\n        if (isArray(cur)) {\n          cur[keys[i]] = null\n          cur.splice(keys[i], 1)\n        }\n      }\n    } else if (value) {\n      //if set value\n      let _nextKey = keys[i + 1]\n\n      //curData is undefined.\n      if (!cur[keys[i]]) {\n        //create data container.\n        let _curType = (_nextKey * 0 === 0) ? 'Array' : 'Object'\n        if (_curType === 'Array') {\n          cur[keys[i]] = []\n        } else if (_curType === 'Object') {\n          cur[keys[i]] = {}\n        }\n      }\n    } else {\n      if (cur[keys[i]] === undefined) {\n        //Data path is undefined and return.\n        return undefined\n      } else if (cur[keys[i]] === null) {\n        return null\n      }\n    }\n\n    cur = cur[keys[i]]\n  }\n\n  return cur\n}\n\nexport default Jsonuri\n"]}